import{_ as l,c as i,o as a,a3 as t}from"./chunks/framework.B7tteqv2.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"css/水平垂直居中方式.md","filePath":"css/水平垂直居中方式.md","lastUpdated":1714991694000}'),e={name:"css/水平垂直居中方式.md"},r=t('<h2 id="元素水平垂直居中的方法" tabindex="-1">元素水平垂直居中的方法 <a class="header-anchor" href="#元素水平垂直居中的方法" aria-label="Permalink to &quot;元素水平垂直居中的方法&quot;">​</a></h2><p>1.定位+margin: auto</p><ul><li>父元素相对定位，固定宽高</li><li>子元素绝对定位，固定宽高，上下左右距离为0，margin: auto</li><li>子元素固定高度时，可以left/top为50%, margin-left|top为负子元素的宽高/2 2.定位+transform</li><li>父元素相对定位，固定宽高</li><li>子元素绝对定位，固定宽高，top|left:50%, transform:translate(-50%, -50%),可以看作margin负值的替代方案，不需要知道宽高 3.flex布局</li><li>父元素: display: flex, 固定宽高， justify-content align-items</li><li>子元素固定宽高 5.table布局</li><li>父元素固定宽高,display: table-cell(vertical-align生效);vertical-align + text-align</li><li>子元素固定宽高，display: inline-block(text-align对齐生效) 4.grid布局</li></ul><h3 id="内联元素" tabindex="-1">内联元素 <a class="header-anchor" href="#内联元素" aria-label="Permalink to &quot;内联元素&quot;">​</a></h3><ul><li>水平居中 <ul><li>行内：text-align</li><li>flex: justify-content</li></ul></li><li>垂直居中 <ul><li>单行文本父元素：height === line-height</li><li>多行文本父元素：display: table-cell, vertical-align: middle</li></ul></li></ul><h3 id="块级元素" tabindex="-1">块级元素 <a class="header-anchor" href="#块级元素" aria-label="Permalink to &quot;块级元素&quot;">​</a></h3><ul><li>水平居中 <ul><li>定宽: margin: 0 auto</li><li>绝对定位 + left:50% + margin-left自身一半(transform)</li></ul></li><li>垂直居中 <ul><li>display: table-cell</li><li>绝对定位 + left + top + margin-left|top(定高)</li><li>transform: translate</li><li>flex</li><li>grid</li></ul></li></ul>',7),n=[r];function o(s,c,_,d,u,f){return a(),i("div",null,n)}const p=l(e,[["render",o]]);export{m as __pageData,p as default};
