import{_ as a,c as e,o as i,a3 as s}from"./chunks/framework.COm4hYgr.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/Vue中的过滤器.md","filePath":"vue/Vue中的过滤器.md","lastUpdated":1714384646000}'),t={name:"vue/Vue中的过滤器.md"},l=s(`<h2 id="vue中的过滤器了解吗-过滤器的应用场景有哪些" tabindex="-1">Vue中的过滤器了解吗？过滤器的应用场景有哪些? <a class="header-anchor" href="#vue中的过滤器了解吗-过滤器的应用场景有哪些" aria-label="Permalink to &quot;Vue中的过滤器了解吗？过滤器的应用场景有哪些?&quot;">​</a></h2><p>过滤器不改变原数据，对数据进行过滤处理返回过滤后的数据，vue可以自定义过滤器，常用于文本格式处理。vue3已经废弃了</p><p>vue3废弃原因：过滤器会增加模版编译和渲染的复杂性，导致性能下降；虽然方便数据处理，但是会使模版变得复杂和难以维护，vue3中可以通过computed和methods更好的替代</p><h3 id="使用位置" tabindex="-1">使用位置 <a class="header-anchor" href="#使用位置" aria-label="Permalink to &quot;使用位置&quot;">​</a></h3><ul><li>模版的双花括号中</li><li>v-bind的表达式中 应该被添加到表达式的尾部，用 ｜ 表示</li></ul><h3 id="定义方式" tabindex="-1">定义方式 <a class="header-anchor" href="#定义方式" aria-label="Permalink to &quot;定义方式&quot;">​</a></h3><ol><li>局部定义 在filters选项中定义</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  formatTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (val) { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li>全局定义 通过Vue.filter(&#39;name&#39;, (value) =&gt; return &#39;&#39;)</li></ol><ul><li>如果局部和全局存在同名过滤器，使用局部过滤器</li><li>过滤器可以链式使用，接受前面的表达式的值或者链式结果作为第一个参数，过滤器使用时的传参按顺序传入</li></ul><h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h3><p>常用于文本格式化：时间格式化、数字格式化、单位转换等</p><p><a href="https://vue3js.cn/interview/vue/filter.html#%E5%9B%9B%E3%80%81%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90" target="_blank" rel="noreferrer">解析参考</a></p>`,13),n=[l];function r(h,o,p,d,u,c){return i(),e("div",null,n)}const E=a(t,[["render",r]]);export{_ as __pageData,E as default};
