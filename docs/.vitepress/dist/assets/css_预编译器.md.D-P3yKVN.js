import{_ as t,c as a,l as s,a as l,o}from"./chunks/framework.COm4hYgr.js";const B=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"css/预编译器.md","filePath":"css/预编译器.md","lastUpdated":1714991694000}'),c={name:"css/预编译器.md"},n=s("h2",{id:"说说对css预编语言的理解-有哪些区别",tabindex:"-1"},[l("说说对css预编语言的理解？有哪些区别 "),s("a",{class:"header-anchor",href:"#说说对css预编语言的理解-有哪些区别","aria-label":'Permalink to "说说对css预编语言的理解？有哪些区别"'},"​")],-1),r=s("blockquote",null,[s("p",null,"sass less stylus")],-1),d=s("p",null,"直接书写CSS，不方便维护及扩展，也不利于复用，预处理器就解决了这些问题 预处理语言增加了变量、函数、混入等的功能，使css更方维护，本质上是css的超集",-1),i=s("li",null,"sass可以省略大括号",-1),_=s("li",null,"都可以支持嵌套，父级选择器标记也都是 &",-1),u=s("li",null,"变量声明：less: @red: 'red'; sass: $red: 'red'",-1),p=s("li",{"color:":"","red,":"",class:"classA(), classB"},"less: class中引入另一个class --> .class",-1);function h(f,e,m,x,$,k){return o(),a("div",null,[n,r,d,s("ol",null,[i,_,u,s("li",null,[l("混入: "),s("ol",null,[p,s("li",{onInclude:e[0]||(e[0]=()=>{}),class:"overflow"},"sass: 声明 -> @mixin .overflow {}; @include使用 -> .class",32)])])])])}const b=t(c,[["render",h]]);export{B as __pageData,b as default};
