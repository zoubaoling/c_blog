import{_ as e,c as t,o as a,a3 as c}from"./chunks/framework.B7tteqv2.js";const w=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/computed-watcher.md","filePath":"vue/computed-watcher.md","lastUpdated":1714298906000}'),o={name:"vue/computed-watcher.md"},r=c('<h2 id="computed-vs-watcher" tabindex="-1">computed VS watcher <a class="header-anchor" href="#computed-vs-watcher" aria-label="Permalink to &quot;computed VS watcher&quot;">​</a></h2><p>watch和computed都是以vue的依赖追踪机制为基础的，当依赖的某个数据变化时，其相关的数据也相应变化 computed 是计算属性，watch 是监听属性</p><h3 id="使用上" tabindex="-1">使用上 <a class="header-anchor" href="#使用上" aria-label="Permalink to &quot;使用上&quot;">​</a></h3><ol><li>computed基于data和props中的数据进行计算，当其依赖数据变化时才会重新计算，否则取缓存的计算结果；watch基于props、data和computed中的数据，监听的数据变化时，进行其他处理</li><li>computed 具有缓存性，只有当其依赖的数据发生变化时，才会重新计算；watch不存在缓存性，监听数据变化时，直接触发响应操作</li><li>computed不支持异步操作，watch支持异步操作，可以在数据变化时进行异步处理业务逻辑操作</li><li>computed定义的计算属性，和data类似，以属性访问的形式访问。watch是监听数据变化时，执行对应的回调函数</li><li>computed可以一个包含get和set的对象，或者一个函数，作为get方法，必须有一个返回值；watch接受一个包括handler的对象或者回调函数，回调函数两个参数分别为新值和旧值</li><li>computed一般用于复杂的逻辑运算，一个数据受一个或多个数据影响，比如模版中的复杂表达式；watch一般处理一个属性变化时，需要执行哪些具体的业务操作，一般用于异步操作或者开销比较大的情况，或一个数据影响多个数据时</li></ol><ul><li>异步区别</li><li>开销比较大</li><li>缓存的结果</li></ul><h3 id="原理上" tabindex="-1">原理上 <a class="header-anchor" href="#原理上" aria-label="Permalink to &quot;原理上&quot;">​</a></h3><ol><li>computed和watch都是在initState中初始化，computed 初始化完初始化 watch</li><li>computed本质是computed watcher，watch本质是user watcher($watch,执行回调函数时，会捕获处理错误)</li></ol><h3 id="computed-watcher" tabindex="-1">computed watcher <a class="header-anchor" href="#computed-watcher" aria-label="Permalink to &quot;computed watcher&quot;">​</a></h3><ol><li>渲染watcher订阅了computed watcher</li><li>初始化computed时，第一次计算数据时，会触发依赖数据的get，将所依赖的数据的dep添加到当前的computed watcher中</li><li>依赖的数据变化时，通知对应订阅了的computed watcher，执行watcher.update &gt; getAndInvoke</li><li>getAndInvoke会通过get计算新值，比对最终的新值和旧值，变化时才会执行回调：dep.notify &gt; 渲染watcher重新渲染</li></ol><p><a href="https://ustbhuangyi.github.io/vue-analysis/v2/reactive/computed-watcher.html#watcher-options" target="_blank" rel="noreferrer">源码解析参考</a><a href="https://fe.ecool.fun/topic/f8de3a13-fb8b-44fd-9a8c-460a36998902?orderBy=updateTime&amp;order=desc&amp;tagId=14" target="_blank" rel="noreferrer">题目参考</a></p>',10),d=[r];function l(i,h,p,u,m,n){return a(),t("div",null,d)}const _=e(o,[["render",l]]);export{w as __pageData,_ as default};
