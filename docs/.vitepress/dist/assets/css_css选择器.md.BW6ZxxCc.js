import{_ as l,c as i,o as t,a5 as e}from"./chunks/framework.B102yH4G.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"css/css选择器.md","filePath":"css/css选择器.md","lastUpdated":1715839678000}'),o={name:"css/css选择器.md"},a=e('<h2 id="css选择器有哪些-优先级-哪些属性可以继承" tabindex="-1">css选择器有哪些？优先级？哪些属性可以继承？ <a class="header-anchor" href="#css选择器有哪些-优先级-哪些属性可以继承" aria-label="Permalink to &quot;css选择器有哪些？优先级？哪些属性可以继承？&quot;">​</a></h2><blockquote><p>CSS的特性：继承性、层叠性、优先级</p></blockquote><p>优先级：写CSS样式的时候，会给同一个元素添加多个样式，此时谁的权重高就显示谁的样式</p><p>标签/伪元素、类/伪类/属性、行内样式、id、!important</p><p>优先级顺序： !important &gt; 行内样式 &gt; id &gt; 类/伪类/属性 &gt; 标签/伪元素</p><h3 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h3><ul><li>id选择器: <code>#box</code></li><li>css选择器: <code>.box</code></li><li>标签选择器: <code>span</code></li><li>后代选择器: <code>#box .one</code>, 空格表示，父元素内部的所有.one元素--支持深层</li><li>子选择器: &#39;.one &gt; .one_1&#39;, &gt; 表示，父元素直接子元素中的.one_1元素--只支持直接子元素</li><li>相邻同胞选择器: <code>.one + .two</code>, +表示，紧接着.one的.two元素</li><li>群组选择器: <code>div, p</code>, 逗号拼接，选择div和p的所有元素</li><li>伪类选择器: 选择处于特定状态或者条件的元素----:link :hover :focus :visited : active :first-child :last-child :first-of-type :disabled :checked :not() :empty :enabled <ul><li>:link ：选择未被访问的链接</li><li>:visited：选取已被访问的链接</li><li>:active：选择活动链接,鼠标按键激活</li><li>:hover ：鼠标指针浮动在上面的元素 定义顺序LVHA：link - visited - hover - active,link和visited互斥，且会被hover和active覆盖</li><li>:focus ：选择具有焦点的,比如input框</li><li>:first-child：父元素的首个子元素,是同级兄弟元素的一种，作用于目标元素的特定同级元素且元素是其父元素中的首个标签元素;eg: <code>p:fist-child</code>第一个p标签,但是P必须是子元素的第一个标签元素(一组兄弟元素中的第一个，且在父元素中也是第一个，不限标签类型)</li><li>:last-child: 父元素的最后一个子元素</li><li>:first-of-type: 父元素中的第一个具有相同类型的子元素。</li><li>:last-of-type: 父元素中的最后一个具有相同类型的子元素。</li><li>:nth-child(n): 选择父元素的第 n 个子元素。取决于在其兄弟元素中的位置，再结合指定选择器;eg: .label:nth-child(odd)-在.label所有的兄弟元素中（其父元素中排列，排列是所有子元素，不仅仅指定选择器元素）排列基数的类名为.label的元素</li><li>:nth-last-child(n): 选择父元素的倒数第 n 个子元素,从后往前匹配</li><li>:nth-of-type(n): 选择父元素中的第 n 个具有相同类型的子元素。和nth-child类似，只是排列顺序是父元素中所有相同标签类型的兄弟元素(如果是标签，就是所有标签兄弟元素；如果是其他选择器，就是所有相同选择器的兄弟元素)</li><li>:nth-last-of-type(n): 选择父元素中的倒数第 n 个具有相同类型的子元素。 :fist-child|last-child|nth-child|nth-last-child｜nth-of-type|nth-last-of-type:都是从指定选择器的父元素中根据其位置去查找指定元素（在其兄弟元素中的位置）</li></ul></li><li>伪元素选择器: 选择元素中不是由单独HTML标签表示的部分----::before ::after ::first-letter ::first-line ::placeholder <ul><li>::placeholder input中text和textarea占位部分</li></ul></li><li>属性选择器: <ul><li><code>[attribute]</code>: 带attribute属性的元素;</li><li><code>[attribute=value]</code>: attribute=value的元素，值只有value---attr=&quot;value&quot;</li><li><code>[attribute~=value]</code>: 匹配带有一个attribute=value的元素或者带有一个attribute属性，其值至少有一个和value匹配的元素(多个值用空格分割)----attr=&quot;value value2&quot;</li><li><code>[attribute|=value]</code>: 匹配一个attribute正好只等于value的元素(后接多个值不匹配)，或者第一个值是以value-开头，其后可接其他值;eg: attr=&quot;zh&quot; attr=&quot;zh-cn en&quot;</li><li><code>^=</code>: 属性值字符串以value开头--class=&quot;abc&quot;; <code>$=</code>: 属性值字符串以value结尾--attr=&quot;bca&quot;; <code>*=</code>: 属性值字符串包括value</li></ul></li></ul><h3 id="优先级" tabindex="-1">优先级 <a class="header-anchor" href="#优先级" aria-label="Permalink to &quot;优先级&quot;">​</a></h3><p>写CSS样式的时候，会给同一个元素添加多个样式，此时谁的权重高就显示谁的样式</p><p>优先级顺序： !important &gt; 行内样式 &gt; id &gt; 类/伪类/属性 &gt; 标签/伪元素</p><p><strong>权重计算规则</strong> 四个层级：A B C D</p><ul><li>A: 行内样式，有-1，没有-0</li><li>B: ID选择器出现的次数</li><li>C: 类选择器 属性选择器 伪类选择器出现的总次数</li><li>D: 标签选择器 和 伪元素 出现的总次数、 (A, B, C, D) 比较规则：</li></ul><ol><li>从左往右比较A B C D,较大者优先级更高</li><li>如果相等，右移一位进行比较</li><li>如果4位全部相等，后面的覆盖前面的</li></ol><h3 id="继承属性" tabindex="-1">继承属性 <a class="header-anchor" href="#继承属性" aria-label="Permalink to &quot;继承属性&quot;">​</a></h3><p><strong>子元素可以继承父类元素的样式</strong></p><ol><li>字体的一些属性：font font-family font-weight font-size font-style</li><li>文本的一些属性：text-indent text-align line-height letter-spacing color word-spacing</li><li>元素的可见性：visibility:hidden</li><li>表格布局的属性：border-spacing border-collapse</li><li>列表的属性：list-style list-style-type list-style-position</li><li>光标属性：cursor</li><li>页面样式属性：page</li><li>声音的样式属性</li></ol><blockquote><p>a标签的字体颜色不能继承；h1-h6标签字体的大小不能继承</p></blockquote><p><strong>不能继承的属性</strong> 可以继承之外的属性</p><ol><li>display</li><li>定位属性: position float clear</li><li>盒模型的属性: width height padding margin border</li><li>背景属性: 背景颜色 背景位置 背景图片等</li><li>轮廓样式: outline outline-style outline-width outline-color</li><li>z-index</li><li>overflow ...</li></ol>',19),c=[a];function s(d,n,r,u,h,p){return t(),i("div",null,c)}const v=l(o,[["render",s]]);export{b as __pageData,v as default};
