import{_ as e,c as l,o as i,a3 as o}from"./chunks/framework.B7tteqv2.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ES6/ES6数组新增了哪些扩展.md","filePath":"ES6/ES6数组新增了哪些扩展.md","lastUpdated":1714567771000}'),a={name:"ES6/ES6数组新增了哪些扩展.md"},c=o('<h2 id="es6中数组新增了哪些扩展" tabindex="-1">ES6中数组新增了哪些扩展? <a class="header-anchor" href="#es6中数组新增了哪些扩展" aria-label="Permalink to &quot;ES6中数组新增了哪些扩展?&quot;">​</a></h2><ul><li>构造函数新增的方法 <ul><li><code>Array.of</code>,将所有传递的参数转换为数组</li><li><code>Array.from</code>,将类数组对象或可遍历<code>iterable</code>对象包括set和map转换为数组.第二个参数是回调函数接受每个元素处理并返回到数组中，可做映射处理</li></ul></li><li>数组实例新增的方法 <ul><li><code>find</code>和<code>findIndex</code>返回第一个符合条件的元素返回元素或者索引。</li><li><code>fill</code>根据指定的值填充数组元素，二、三参数分别为起始位置和结束位置（不含）</li><li><code>copyWithin</code>复制数组元素并粘贴到指定位置，三个参数：开始粘贴的位置，开始复制的位置，结束复制的位置（不含）</li><li><code>inludes</code>判断数组是否包含给定的值，第二个参数是搜索的起始位置，默认为0</li><li><code>entries</code> <code>values</code> <code>keys</code></li><li><code>flat</code>扁平化数组，默认扁平一层，可以传入数值指定扁平的层级</li><li><code>flatMap</code>相当于map + flat，接受回到函数进行map处理后再扁平，只一层，不改变原数组</li></ul></li><li>扩展运算符 <ul><li>可以将一个数组元素展开为多个独立的元素，或者将多个元素合并为数组，在函数传参和解构赋值时比较方便，只能在参数的最后一位</li><li>可以实现浅拷贝</li><li>可以将类数组和可遍历对象转换为数组</li></ul></li></ul><hr><ul><li>[ ] new ArrayBuffer</li></ul>',4),d=[c];function t(_,r,s,n,u,f){return i(),l("div",null,d)}const S=e(a,[["render",t]]);export{m as __pageData,S as default};
