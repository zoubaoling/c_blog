import{_ as e,c as l,o,a5 as i}from"./chunks/framework.B102yH4G.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"http/OSI七层模型.md","filePath":"http/OSI七层模型.md","lastUpdated":1716005365000}'),t={name:"http/OSI七层模型.md"},c=i('<h2 id="如何理解osi七层模型" tabindex="-1">如何理解OSI七层模型? <a class="header-anchor" href="#如何理解osi七层模型" aria-label="Permalink to &quot;如何理解OSI七层模型?&quot;">​</a></h2><p><code>应用层(第7层)、表示层、会话层、传输层、网络层、数据链路层、物理层</code></p><ol><li><code>应用层</code>：为应用程序提供网络服务，直接为用户提供各种网络应用，eg: HTTP、FTP、SMTP <ul><li>定义了应用进程之间的交互规则</li><li>数据单元是报文</li></ul></li><li><code>表示层</code>：处理<code>数据格式的转换、加密解密、数据压缩</code>等，确保数据能被应用层正确解释, eg: SSL/TLS JPEG</li><li><code>会话层</code>：负责应用之间建立、管理和终止会话 <ul><li>并提供会话恢复功能</li></ul></li><li><code>传输层</code>：提供端到端（主机进程）的数据传输服务，包括数据的分段、重组和错误恢复，确保数据可靠地传输，eg:TCP UDP</li><li><code>网络层</code>：负责数据在不同网络间的传输，选择合适的路由和交换节点，确保数据成功传送, eg: IP ICMP <ul><li>负责将数据从源主机发送到目标主机，包括寻找最佳路径和实现路由选择。</li></ul></li><li><code>数据链路层</code>：在物理链路上传输数据帧，并处理帧的传输错误 <ul><li>还负责物理地址（MAC地址）的寻址和数据帧的识别</li></ul></li><li><code>物理层</code>：负责传输原始的比特流传输（0和1） <ul><li>通过物理媒介（如光纤、电缆、无线等）将数据从一个节点传输到另一个节点</li></ul></li></ol>',3),a=[c];function d(_,s,r,n,p,u){return o(),l("div",null,a)}const P=e(t,[["render",d]]);export{h as __pageData,P as default};
