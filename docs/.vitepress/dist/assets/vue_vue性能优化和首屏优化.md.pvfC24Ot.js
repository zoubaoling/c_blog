import{_ as l,c as i,o as a,a3 as e}from"./chunks/framework.COm4hYgr.js";const v=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue性能优化和首屏优化.md","filePath":"vue/vue性能优化和首屏优化.md","lastUpdated":1715657339000}'),t={name:"vue/vue性能优化和首屏优化.md"},o=e('<h2 id="vue的性能优化和首屏优化" tabindex="-1">vue的性能优化和首屏优化 <a class="header-anchor" href="#vue的性能优化和首屏优化" aria-label="Permalink to &quot;vue的性能优化和首屏优化&quot;">​</a></h2><h3 id="性能优化" tabindex="-1">性能优化 <a class="header-anchor" href="#性能优化" aria-label="Permalink to &quot;性能优化&quot;">​</a></h3><ol><li>编码优化</li></ol><ul><li>不要把所有数据都放在data中</li><li>v-for时给每个元素绑定事件用事件代理</li><li>keep-alive缓存组件</li><li>尽可能拆分组件，提高复用性、维护性</li><li>key值要保证唯一</li><li>合理使用路由懒加载，异步组件</li><li>数据持久化存储的使用尽量用防抖、节流优化</li></ul><ol start="2"><li>加载优化</li></ol><ul><li>按需加载</li><li>内容懒加载</li><li>图片懒加载</li></ul><ol start="3"><li>用户体验</li></ol><ul><li>骨架屏</li></ul><ol start="4"><li>SEO优化</li></ol><ul><li>预渲染</li><li>服务端渲染ssr</li></ul><ol start="5"><li>打包优化</li></ol><ul><li>CDN形式加载第三方模块</li><li>多线程打包</li><li>抽离公共文件</li></ul><ol start="6"><li>缓存和压缩</li></ol><ul><li>客户端缓存、服务端缓存</li><li>服务端Gzip压缩</li></ul><h3 id="首屏优化该如何去做" tabindex="-1">首屏优化该如何去做 <a class="header-anchor" href="#首屏优化该如何去做" aria-label="Permalink to &quot;首屏优化该如何去做&quot;">​</a></h3><ol><li>使用路由懒加载</li><li>非首屏组件使用异步组件</li><li>首屏不中要的组件延迟加载</li><li>静态资源放在CDN上</li><li>减少首屏上JS、CSS等资源文件的大小</li><li>使用服务端渲染</li><li>简历减少DOM的数量和层级</li><li>使用精灵图请求</li><li>做一些loading</li><li>开启Gzip压缩</li><li>图片懒加载</li></ol>',16),r=[o];function _(s,u,n,d,c,h){return a(),i("div",null,r)}const f=l(t,[["render",_]]);export{v as __pageData,f as default};
