import{_ as e,c as l,o as i,a3 as t}from"./chunks/framework.BmlUaO9n.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"js/数组的常用方法.md","filePath":"js/数组的常用方法.md","lastUpdated":1714650100000}'),a={name:"js/数组的常用方法.md"},r=t('<h2 id="数组的常用方法有哪些" tabindex="-1">数组的常用方法有哪些？ <a class="header-anchor" href="#数组的常用方法有哪些" aria-label="Permalink to &quot;数组的常用方法有哪些？&quot;">​</a></h2><ul><li>操作：增删改查</li><li>排序</li><li>转换</li><li>迭代</li></ul><h3 id="操作方法" tabindex="-1">操作方法 <a class="header-anchor" href="#操作方法" aria-label="Permalink to &quot;操作方法&quot;">​</a></h3><p><strong>增</strong></p><ul><li>push,尾部添加任意数量的参数，返回数组长度</li><li>unshift, 头部添加任意数量参数，返回数组长度</li><li>splice(start, deleteCount, ..items): deleteCount为0，在指定位置添加元素</li><li>concat(..items), 合并数组，添加到副本默认返回新创建的数组，不会影响原数组。参数会被扁平一层处理添加到新数组中</li></ul><p><strong>删</strong></p><ul><li>pop,尾部删除最后一项，返回删除项</li><li>shift,头部删除第一个数据，返回删除项</li><li>splice(start, deleteCount, ...items): 从start开始，删除deleteCount个元素，返回包含删除元素的数组</li><li>slice(start, end): 解决指定位置的数组元素，并返回新数组，不改变原数组</li></ul><p><strong>改</strong></p><ul><li>splice(start, deleteCount, ...items): 删除元素，添加元素，返回删除的元素数组，会改变原数组</li></ul><p><strong>查</strong></p><ul><li>indexOf(searchElement: number, fromIndex): 查找指定元素的位置，没有-1</li><li>includes(searchElement: number, fromIndex): 判断查找元素是否在数组中存在，否则false</li><li>find((val, index, arr)): 根据指定函数，返回复合规则的第一个元素，没有undefined</li></ul><h3 id="排序" tabindex="-1">排序 <a class="header-anchor" href="#排序" aria-label="Permalink to &quot;排序&quot;">​</a></h3><ul><li>reverse，反转，会改变原数组</li><li>sort，接受一个比较函数</li></ul><h3 id="转换方法" tabindex="-1">转换方法 <a class="header-anchor" href="#转换方法" aria-label="Permalink to &quot;转换方法&quot;">​</a></h3><ul><li>join() 将数组按指定分割符拼接成字符串</li></ul><h3 id="迭代" tabindex="-1">迭代 <a class="header-anchor" href="#迭代" aria-label="Permalink to &quot;迭代&quot;">​</a></h3><p>都不改变原数组</p><ul><li>some, 传入函数，数组运行传入函数，只要有true，就返回true，不运行后面的元素</li><li>every，传入函数，数组运行传入函数，每一项都为true，返回true，遇到false即返回，不运行后面的元素</li><li>forEach，传入函数，每一项都会运行传入函数，没有返回值</li><li>filter，传入函数，数组每一项都运行传入函数，返回函数结果为true的项组成的数组</li><li>map,传入函数，数组每一项都运行传入函数，返回每次函数结果组成的数组</li></ul>',18),s=[r];function o(n,u,d,c,h,_){return i(),l("div",null,s)}const f=e(a,[["render",o]]);export{m as __pageData,f as default};
