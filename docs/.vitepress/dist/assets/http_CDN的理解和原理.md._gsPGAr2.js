import{_ as e,c as l,o,a3 as i}from"./chunks/framework.COm4hYgr.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"http/CDN的理解和原理.md","filePath":"http/CDN的理解和原理.md","lastUpdated":1715657339000}'),t={name:"http/CDN的理解和原理.md"},a=i('<h2 id="如何理解cdn-说说实现原理" tabindex="-1">如何理解CDN？说说实现原理? <a class="header-anchor" href="#如何理解cdn-说说实现原理" aria-label="Permalink to &quot;如何理解CDN？说说实现原理?&quot;">​</a></h2><p>CDN（Content Delivery Network）: 内容分发网络, 分布在不同区域的边缘节点服务器群组成的分布式网络，根据用户位置分配最近的资源,提高访问速度</p><ul><li>本质是<code>缓存加速</code>。将服务器上存储的静态内容缓存在CDN节点上，当访问这些静态内容时，无需访问服务器源站，就近访问CDN节点即可获取相同内容，从而达到加速的效果，同时减轻服务器源站的压力</li><li>用户可就近取得所需内容，解决 Internet网络拥挤的状况，提高用户访问网站的响应速度和成功率</li><li>访问动态内容时，每次都需要访问服务器，由服务器动态生成实时的数据并返回。CDN无法缓存实时变化的动态内容。对于动态内容请求，CDN节点只能转发回服务器源站，没有加速效果</li></ul><p><em>访问离他“最近的”一个 CDN 节点，术语叫边缘节点</em></p><h3 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h3><p><strong>没有CDN时，请求资源</strong> 域名 -&gt; DNS -&gt; IP地址 &gt; 发出请求 &gt; 响应请求</p><p><strong>有CDN时，请求资源</strong></p><ol><li><code>本地DNS</code>解析域名，返回CNAME，指向<code>CDN专用的DNS服务器</code></li><li><code>CDN的DNS服务器</code>返回<code>全局负载均衡系统</code>的IP地址</li><li><code>用户</code>向<code>全局负载均衡系统</code>发起请求</li><li><code>全局负载均衡系统</code>进行智能调度，返回最适合的边缘节点IP地址-<code>负载均衡，智能调度</code><ol><li>根据用户的IP地址，查表得知地理位置，找相对最近的边缘节点</li><li>根据用户所在的运营商网络，找相同网络的边缘节点</li><li>检查边缘节点的负载情况，找负载较轻的节点</li><li>其他，比如节点的“健康状况”、服务能力、带宽、响应时间等</li></ol></li><li>用户就近向边缘节点发起请求-<code>缓存代理</code><ol><li>如果缓存服务器上没有用户想要的内容，这台服务器就要向它的上一级缓存服务器请求内容，直至追溯到网站的源服务器将内容拉到本地</li><li>如果有就直接返回</li></ol></li></ol><h3 id="作用" tabindex="-1">作用 <a class="header-anchor" href="#作用" aria-label="Permalink to &quot;作用&quot;">​</a></h3><ul><li>提高网站加载速度</li><li>减轻原始服务器的压力</li><li>增加网站的可用性和可靠性：即使原始服务器遇到问题，用户仍可以从CDN节点获取缓存的内容。此外，CDN能够通过分布式的资源来抵御大规模的流量攻击</li><li>安全性增强：许多CDN提供额外的安全功能，如DDoS攻击防护、安全证书和其他网络安全服务</li></ul><p>主要是两个技术：</p><ul><li>负载均衡、智能调度分配边缘节点进行服务</li><li>缓存代理：缓存命中返回给用户，否则回源</li></ul>',12),c=[a];function d(r,n,_,s,D,N){return o(),l("div",null,c)}const C=e(t,[["render",d]]);export{h as __pageData,C as default};
