import{_ as e,c as i,o as a,a5 as o}from"./chunks/framework.B102yH4G.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"vue/vue的mixin.md","filePath":"vue/vue的mixin.md","lastUpdated":1715938250000}'),t={name:"vue/vue的mixin.md"},l=o('<h2 id="说说对mixin的理解-有什么场景" tabindex="-1">说说对mixin的理解，有什么场景 <a class="header-anchor" href="#说说对mixin的理解-有什么场景" aria-label="Permalink to &quot;说说对mixin的理解，有什么场景&quot;">​</a></h2><p>常用于功能复用，本质是一个对象，包括各种选项：<code>data methods computed</code>等</p><p>一个组件可以同时混入多个mixin</p><h3 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h3><ul><li>全局注册 <code>Vue.mixin({})</code>, 一旦存在全局混入，将影响到所有的vue实例</li><li>局部注册 <code>mixins: [{}]</code></li></ul><h3 id="多个mixin合并策略" tabindex="-1">多个mixin合并策略 <a class="header-anchor" href="#多个mixin合并策略" aria-label="Permalink to &quot;多个mixin合并策略&quot;">​</a></h3><p><code>替换, 合并, 队列</code></p><ol><li><code>替换</code><code>prop computed methods inject</code>几个选项中同名的会被后来的直接替换,不同名的补充合并</li><li><code>合并</code> data 相同属性的对象会进行递归合并,添加不存在的属性，相同的对象属性递归合并，组件 &gt; mixin</li><li><code>队列</code> watch和生命周期函数，会添加到数组中，依此执行数组中的函数，组件内 &gt; mixin</li><li>叠加</li></ol><h3 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h3><ul><li>分页表格的基本搜索、翻页的处理</li><li>弹框的显隐</li><li>地图的初始化、基础标点、几何图形等公共基础部分的处理</li></ul>',10),d=[l];function n(c,r,m,s,h,u){return a(),i("div",null,d)}const p=e(t,[["render",n]]);export{x as __pageData,p as default};
