import{_ as P,c as l,o as i,a3 as t}from"./chunks/framework.B7tteqv2.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"http/UDP和TCP.md","filePath":"http/UDP和TCP.md","lastUpdated":1715169354000}'),a={name:"http/UDP和TCP.md"},e=t('<h2 id="如何理解udp-和-tcp-区别-应用场景" tabindex="-1">如何理解UDP 和 TCP? 区别? 应用场景? <a class="header-anchor" href="#如何理解udp-和-tcp-区别-应用场景" aria-label="Permalink to &quot;如何理解UDP 和 TCP? 区别? 应用场景?&quot;">​</a></h2><p>TCP 和 UDP都是传输层协议，他们都属于TCP/IP协议族：</p><ul><li>TCP 是面向连接的协议，建立连接3次握手、断开连接四次挥手，UDP是面向无连接，数据传输前后不连接连接，发送端只负责将数据发送到网络，接收端从消息队列读取</li><li>TCP 提供可靠的服务，传输过程采用流量控制、编号与确认、计时器等手段确保数据无差错，不丢失，且会对顺序进行控制。UDP 则尽可能传递数据，但不保证传递交付给对方</li><li>TCP 面向字节流，将应用层报文看成一串无结构的字节流，分解为多个TCP报文段传输后，在目的站重新装配。UDP协议面向报文，不拆分应用层报文，只保留报文边界，一次发送一个报文，接收方去除报文首部后，原封不动将报文交给上层应用</li><li>TCP 只能点对点全双工通信。UDP 支持一对一、一对多、多对一和多对多的交互通信</li><li>TCP效率低，UDP传输效率高</li><li>TCP提供拥塞控制</li></ul><h3 id="应用层协议" tabindex="-1">应用层协议 <a class="header-anchor" href="#应用层协议" aria-label="Permalink to &quot;应用层协议&quot;">​</a></h3><ol><li>TCP应用层协议</li></ol><ul><li>HTTP：用于在Web浏览器和Web服务器之间传输超文本数据。大多数网站使用TCP上的HTTP来传输网页内容，图像，视频等。</li><li>SMTP：用于电子邮件的发送。它确保电子邮件消息以可靠的方式传递到电子邮件服务器。</li><li>POP3 和 IMAP：这两种协议用于从电子邮件服务器接收邮件。它们使用TCP确保邮件的完整传递。</li><li>FTP：用于在客户端和服务器之间传输文件。TCP确保文件以可靠的方式传输。</li><li>SSH：用于远程登录和安全传输数据。SSH使用TCP来保证安全的数据传输。</li><li>HTTPS：是安全的HTTP，使用SSL/TLS进行加密。它在TCP上运行，用于安全的网页浏览。</li></ul><ol start="2"><li>UPD应用层协议</li></ol><ul><li>DNS：用于将域名映射到IP地址。DNS使用UDP进行快速的查询和响应，尽管它不提供数据可靠性。</li><li>DHCP：用于为设备分配IP地址和其他网络配置。DHCP使用UDP来请求和分配IP地址。</li><li>SNMP：用于网络设备的监控和管理。它使用UDP在网络设备之间传输监控信息。</li><li>TFTP：类似于FTP，但更简单，用于快速传输文件。TFTP使用UDP来传输数据。</li><li>VoIP：用于实时语音通话。VoIP应用程序使用UDP来传输音频数据，因为它对延迟比数据丢失更敏感。</li><li>NTP：用于同步计算机的时间。NTP使用UDP来获取时间信息。</li></ul>',8),T=[e];function o(r,_,s,c,C,D){return i(),l("div",null,T)}const p=P(a,[["render",o]]);export{d as __pageData,p as default};
